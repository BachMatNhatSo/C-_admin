@model IEnumerable<WebsiteAdmin.Models.Sach>
@{
    ViewData["Title"] = "Index";
}
@{
    var pageTitle = "Sách";
    var sectionTitle = "Quản lý";
}
        <div class="row" style="margin-bottom: 5px;">
            <button type="button" style=" background-color: #ff6161;color:white; " id="btnThem" class="btn btn-warning btn-lg" data-toggle="modal"
                data-target="#myModal">Mượn Trả
            </button>
             <a
                 type="button" style="margin-left: 13px;background-color:#ff6161; color:white;" class="btn btn-warning btn-lg" 
              asp-controller="Saches" asp-action="ExportExcel">Xuất Excel
            </a>      
        </div>
    

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="modal-title" class="modal-title">Thông Tin</h4>
            </div>
            <div class="modal-body">
                <form id="modalForm" method="post">
                    <input type="hidden" id="Id" name="id" />
                    <div class="mb-3">
                        <label class="form-label">Tên Sách</label>
                        <input type="text" id="tenSach" name="tenSach" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tên Tác Giả</label>
                        <input type="text" id="tacGia" name="tacGia" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Giá Tiền</label>
                        <input type="number" id="giaTien" name="giaTien" class="form-control" required min="0" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Nhà Xuất Bản</label>
                        <input type="text" id="nxb" name="nxb" class="form-control" required />
                    </div>
                    <div class="mb-3" style="display: flex;justify-content: flex-end;" >
                        <button type="submit" class="btn btn-primary" style=" background-color: #ff6161;color:white; width: 115px;  border: red; ">Lưu</button>
                    </div>
                </form>
                <div class="container">
                        <form method="post" asp-controller="Saches" asp-action="ImportExcel" enctype="multipart/form-data">
                       <input type="file" name="formFile" style="width: 227px; padding: 8px 12px;  border: 1px solid red;    height: 50px; border-radius: 5px; cursor: pointer; background-color: #ff6161;color:white;  " />
                        <button type="submit" style="padding: 10px 20px;  background-color: #ff6161;color:white;  border: red;height: 50px; border-radius: 5px; cursor: pointer;">Nhập File Excel</button>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

        <!-- DataTable -->
        <table id="sachTable" class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Tên Sách</th>
                    <th>Tác Giả</th>
                    <th>Giá Tiền</th>
                    <th>NXB</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be populated dynamically by DataTables -->
            </tbody>
        </table>
        <!-- End DataTable -->
     
    

@section Scripts {
   
    <script>
        $(document).ready(function () {
        var isEdit = false; // Biến để kiểm tra xem có phải là chức năng chỉnh sửa hay không
          var dataTable=  $('#sachTable').DataTable({ "responsive": true,
                "ajax": {
                    "url": "@Url.Action("SachData", "Saches")",
                    "dataSrc": ""
                },
                "columns": [
                    { "data": null,
                        "render":function(data,type,row,meta){
                            return meta.row +1;
                        }
                    },
                    { "data": "tenSach" },
                    { "data": "tacGia" },
                    { 
                        "data": "giaTien",
                        "render": function(data, type, row) {
                            // Format giaTien as currency
                            return parseFloat(data).toFixed(1).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                        }
                    },
                    { "data": "nxb" },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                          return '<button class="btn btn-edit btn-sm" data-id="' + data.id + '"><i class="fas fa-pencil-alt"></i></button> | ' +
                                '<button class="btn btnDelete btn-sm" data-id="' + row.id + '"> <i class="fa fa-trash"></i></button>';
                                  }
                    }
                ],
                  
                "language": {
                "search": "Tìm kiếm:",
                "lengthMenu":"Hiển thị _MENU_ dòng"
                    }   
                   
            });
           

          


            
             $('#sachTable').on('draw.dt', function() {
               var info = dataTable.page.info();
                $('#sachTable_info').html('Hiển thị từ ' + (info.start + 1) + ' đến ' + info.end + ' của ' + info.recordsTotal + ' mục');
            }); 
            // Hiển thị modal cho chức năng tạo mới
            $('#btnThem').click(function (e) {
                e.preventDefault();
                isEdit = false;
                $('#modal-title').text('Tạo Sách Mới');
                $('#modalForm')[0].reset(); // Đặt lại form
                $('#Id').removeAttr('name'); // Xóa thuộc tính 'name' của trường ẩn Id
                $('#myModal').modal('show');
                });

            // Hiển thị modal cho chức năng chỉnh sửa
            $('#sachTable').on('click', '.btn-edit', function (e) {
                e.preventDefault();
                isEdit = true;
                var data = $('#sachTable').DataTable().row($(this).closest('tr')).data(); // Lấy dữ liệu của hàng được chọn
                $('#modal-title').text('Chỉnh Sửa Sách');
                $('#Id').attr('name', 'id'); // Thêm thuộc tính 'name' vào trường ẩn Id
                $('#Id').val(data.id);
                $('#tenSach').val(data.tenSach);
                $('#tacGia').val(data.tacGia);
                $('#giaTien').val(data.giaTien);
                $('#nxb').val(data.nxb);
                $('#myModal').modal('show');
            });

            // Xử lý gửi dữ liệu
            $('#modalForm').submit(function (e) {
            e.preventDefault(); // Prevent default form submission
            // Serialize form data
            var formData = $(this).serialize();
            var url = isEdit ? '/Saches/Edit' : '/Saches/Create';
            // Send AJAX request
            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        // Handle success
                        Swal.fire({
                            title: 'Success',
                            text: 'Record created successfully.',
                            icon: 'success',
                            timer: 2000
                        }).then(function () {
                            location.reload(); // Reload page or update table
                        });
                    } else {
                        // Handle failure
                        Swal.fire('Error', 'Failed to create record.', 'error');
                    }
                },
                error: function (xhr, status, error) {
                    // Handle error
                    Swal.fire('Error', 'An error occurred while processing your request.', 'error');
                }
            });
    });
            //xử lý xóa dữ liệu 
            $('#sachTable').on('click', '.btnDelete', function() {
            var id = $(this).data('id'); // Get the id from data attribute of the clicked button
            // Show SweetAlert confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to delete this record. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If user confirms deletion, proceed with AJAX request
                    $.ajax({
                        url: '/Saches/Delete/' + id,
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                // Show success message
                                Swal.fire(
                                    'Deleted!',
                                    'The record has been deleted.',
                                    'success'
                                ).then(function () {
                                    // Refresh DataTable after successful deletion
                                    dataTable.ajax.reload();
                                });
                            } else {
                                // Show error message
                                Swal.fire(
                                    'Error!',
                                    'An error occurred while deleting the record.',
                                    'error'
                                );
                            }
                        },
                        error: function (xhr) {
                            // Show error message
                            Swal.fire(
                                'Error!',
                                'An error occurred while deleting the record.',
                                'error'
                            );
                        }
                    });
                }
            });
        });

    });
         
    </script>
        @if (TempData["Message"] != null)
    {
        <script>
            // Display SweetAlert based on TempData["Message"] value
            var message = "@TempData["Message"]";
            if (message === "success") {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'File imported successfully!'
                });
            } else if (message === "error") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'No file uploaded!'
                });
            }
        </script>
    }
}
