@model IEnumerable<WebsiteAdmin.Models.SinhVien>
@{
    ViewData["Title"] = "Index";
}


  <div class="row" style="margin-bottom:5px;">
      <button type="button" style=" background-color: #ff6161;color:white; " id="btnThem" class="btn btn-warning btn-lg" data-toggle="modal"
                data-target="#myModal">Thêm Sinh Viên
            </button>
             <a
                 type="button" style="margin-left: 13px;background-color:#ff6161; color:white;" class="btn btn-warning btn-lg" 
              asp-controller="SinhViens" asp-action="ExportExcel">Xuất Excel
            </a>   
  </div>
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="modal-title" class="modal-title">Thông Tin</h4>
            </div>
            <div class="modal-body">
                <form id="modalForm" method="post">
                    <input type="hidden" id="Id" name="id" />
                    <div class="mb-3">
                        <label class="form-label">Tên Sinh Viên</label>
                        <input type="text" id="tensinhvien" name="tensinhvien" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">MSSV</label>
                        <input type="text" id="mssv" name="mssv" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Điện Thoại</label>
                        <input type="number" id="dienthoai" name="dienthoai" class="form-control" required min="0" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Địa Chỉ</label>
                        <input type="text" id="diachi" name="diachi" class="form-control" required />
                    </div>
                    <div class="mb-3" style="display: flex;justify-content: flex-end;" >
                        <button type="submit" class="btn btn-primary" style=" background-color: #ff6161;color:white; width: 115px;  border: red; ">Lưu</button>
                    </div>
                </form>
                    <div class="container">
                        <form method="post" asp-controller="Sinhviens" asp-action="ImportExcel" enctype="multipart/form-data">
                       <input type="file" name="formFile" style="width: 227px; padding: 8px 12px;  border: 1px solid red;    height: 50px; border-radius: 5px; cursor: pointer; background-color: #ff6161;color:white;  " />
                        <button type="submit" style="padding: 10px 20px;  background-color: #ff6161;color:white;  border: red;height: 50px; border-radius: 5px; cursor: pointer;">Nhập File Excel</button>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

     
         <table id="sachTable" class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Tên Sinh Viên</th>
            <th>MSSV</th>
            <th>Điện Thoại</th>
            <th>Địa Chỉ</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        <!-- Data will be populated dynamically by DataTables -->
    </tbody>
</table>
   
 

<div id="map" style="width: 100%; height: 400px;"></div>

<script src="https://maps.google.com/maps/api/js?key=AIzaSyAfvfTMzqsEFQetrgPhrWG4KhNBx0J8dFY" type="text/javascript"></script>

 
@section Scripts {
    <script type="text/javascript" >
        $(document).ready(function () {
        var isEdit = false; // Biến để kiểm tra xem có phải là chức năng chỉnh sửa hay không
           var dataTable= $('#sachTable').DataTable({
                "ajax": {
                    "url": "@Url.Action("SinhVienData", "SinhViens")",
                    "dataSrc": ""
                },
                 
                "columns": [
                    { "data": null,
                        "render":function(data,type,row,meta){
                            return meta.row +1;
                        }
                    },
                    { "data": "tensinhvien" },
                    { "data": "mssv" },
                    { "data": "dienthoai" },
                    { "data": "diachi" },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return '<button class="btn btn-edit btn-sm" data-id="' + data.id + '"><i class="fas fa-pencil-alt"></i></button> | ' +
                                '<button class="btn btnDelete btn-sm" data-id="' + row.id + '"> <i class="fa fa-trash"></i></button>';}
                    }

                ],"language": {
                "search": "Tìm kiếm:",
                "lengthMenu":"Hiển thị _MENU_ dòng"
                    }   
            });

             $('#sachTable').on('draw.dt', function() {
               var info = dataTable.page.info();
                $('#sachTable_info').html('Hiển thị từ ' + (info.start + 1) + ' đến ' + info.end + ' của ' + info.recordsTotal + ' mục');
            }); 
            // Hiển thị modal cho chức năng tạo mới
            $('#btnThem').click(function (e) {
                e.preventDefault();
                isEdit = false;
                $('#modal-title').text('Thêm Sinh Viên Mới');
                $('#modalForm')[0].reset(); // Đặt lại form
                $('#Id').removeAttr('name'); // Xóa thuộc tính 'name' của trường ẩn Id
                $('#myModal').modal('show');
                });

            // Hiển thị modal cho chức năng chỉnh sửa
            $('#sachTable').on('click', '.btn-edit', function (e) {
                e.preventDefault();
                isEdit = true;
                var data = $('#sachTable').DataTable().row($(this).closest('tr')).data(); // Lấy dữ liệu của hàng được chọn
                $('#modal-title').text('Chỉnh Sửa Sinh Viên');
                $('#Id').attr('name', 'id'); // Thêm thuộc tính 'name' vào trường ẩn Id
                $('#Id').val(data.id);
                $('#tensinhvien').val(data.tensinhvien);
                $('#mssv').val(data.mssv);
                $('#dienthoai').val(data.dienthoai);
                $('#diachi').val(data.diachi);
                $('#myModal').modal('show');
            });

            // Xử lý gửi dữ liệu
            $('#modalForm').submit(function (e) {
                e.preventDefault(); // Ngăn chặn việc gửi form một cách thông thường
                var form = $(this);
                var url = isEdit ? '/SinhViens/Edit' : '/SinhViens/Create';
                $.ajax({
                    url: url,
                    type: 'post',
                    data: form.serialize(),
                       success: function (response) {
                    if (response && response.success) {
                        $('#myModal').modal('hide');
                        Swal.fire({
                            title: "Good job!",
                            text: "You clicked the button!",
                            icon: "success",
                            timer: 3000 // Thời gian hiển thị của thông báo (milliseconds)
                        }).then(() => {
                            location.reload(); // Tải lại trang để cập nhật bảng
                        });
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to add data.",
                            icon: "error"
                        });
                    }
                },
                    error: function (xhr, status, error) {
                        console.error(error);
                        alert("Đã xảy ra lỗi khi lưu dữ liệu.");
                    }
                });
            });
            
            $('#sachTable').on('click', '.btnDelete', function() {
            var id = $(this).data('id'); // Get the id from data attribute of the clicked button
            // Show SweetAlert confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to delete this record. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If user confirms deletion, proceed with AJAX request
                    $.ajax({
                        url: '/SinhViens/Delete/' + id,
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                // Show success message
                                Swal.fire(
                                    'Deleted!',
                                    'The record has been deleted.',
                                    'success'
                                ).then(function () {
                                    // Refresh DataTable after successful deletion
                                    dataTable.ajax.reload();
                                });
                            } else {
                                // Show error message
                                Swal.fire(
                                    'Error!',
                                    'An error occurred while deleting the record.',
                                    'error'
                                );
                            }
                        },
                        error: function (xhr) {
                            // Show error message
                            Swal.fire(
                                'Error!',
                                'An error occurred while deleting the record.',
                                'error'
                            );
                        }
                    });
                }
            });
        });


            function addMarkerWithInfo(latitude, longitude, address, map) {
                var marker = new google.maps.Marker({
                    map: map,
                    position: { lat: latitude, lng: longitude }
                });

                var infowindow = new google.maps.InfoWindow({
                    content: address
                });

                marker.addListener('click', function () {
                    infowindow.open(map, marker);
                });
            }

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: new google.maps.LatLng(10.844201, 106.635685),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            // Listen for the 'draw.dt' event of the DataTable
            dataTable.on('draw.dt', function () {
                // Iterate over each row in the DataTable
                $('#sachTable').DataTable().rows().every(function () {
                    // Get the data for the current row
                    var data = this.data();
                    // Extract the address from the data
                    var address = data.diachi;

                    // Make a request to OpenStreetMap Nominatim API to convert address to latitude and longitude
                    $.ajax({
                        url: 'https://nominatim.openstreetmap.org/search',
                        method: 'GET',
                        dataType: 'json',
                        data: {
                            q: address,
                            format: 'json',
                            limit: 1
                        },
                        success: function (response) {
                            if (response.length > 0) {
                                var latitude = parseFloat(response[0].lat);
                                var longitude = parseFloat(response[0].lon);
                                // Add marker with information for the geocoded location
                                addMarkerWithInfo(latitude, longitude, address, map);
                            } else {
                                console.log('Geocoding failed: No results found.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Geocoding request failed: ' + error);
                        }
                    });
                });
            });
        });

    </script>



       @if (TempData["Message"] != null)
    {
        <script>
            // Display SweetAlert based on TempData["Message"] value
            var message = "@TempData["Message"]";
            if (message === "success") {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'File imported successfully!'
                });
            } else if (message === "error") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'No file uploaded!'
                });
            }
        </script>
    }
}
